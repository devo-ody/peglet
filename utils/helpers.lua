---
--- Generated by Luanalysis
--- Created by rodelbianco.
--- DateTime: 4/1/23 2:29 PM
---
local helpers = { _version = "0.0.1" }

local json = require('utils/json')
local inspect = require('inspect')

local function istable(t)
    return type(t) == 'table'
end

function helpers.istable(t)
    return istable(t)
end

function helpers.as_string(value)
    if istable(value) then
        return inspect(value, {newline=' ', indent=""})
        --return json.encode(value)
    else
        return tostring(value)
    end
end

function helpers.table_pack(...)
    local table = { ... }
    return table, select('#', ...)
end

function helpers.table_as_set(list)
    local set = {}
    for _, item in ipairs(list) do
        set[item] = true
    end
    return set
end

function helpers.shallow_copy(t)
    local t2 = {}
    for k,v in pairs(t) do
        t2[k] = v
    end
    return t2
end

function helpers.deepcopy(o, cache)
    cache = cache or {}
    if o == nil then return nil end
    if cache[o] then return cache[o] end

    local new_value
    if type(o) == 'table' then
        new_value = {}
        cache[o] = new_value

        for k, v in next, o, nil do
            --new_value[helpers.deepcopy(k)] = helpers.deepcopy(v)
            new_value[helpers.deepcopy(k, cache)] = helpers.deepcopy(v, cache)
        end
        --setmetatable(new_value, helpers.deepcopy(getmetatable(o)))
        setmetatable(new_value, helpers.deepcopy(getmetatable(o), cache))
    else -- number, string, boolean, etc
        new_value = o
    end
    return new_value
end

function helpers.join_new_table(...)
    result_table = {}
    table_list = { ... }

    for table_index = 1, #table_list do
        current_table = table_list[table_index]
        for key, value in pairs(current_table) do
            result_table[key] = value
        end
    end

    return result_table
end

function helpers.toboolean(str)
    local bool = false
    if str == "true" then
        bool = true
    end
    return bool
end

return helpers